use PracticeDB;

create table Customers(
    customer_id int primary key,
	first_name varchar(25),
	last_name varchar(25),
	email varchar(25),
	city varchar(25)
);

insert into Customers(customer_id,first_name,last_name,email,city)
values
(1,'John','Smith','john.smith@email.com','Mumbai'),
(2,'Sarah','Johnson','sarah.j@email.com','Delhi'),
(3,'Mike','Davis','mike.d@email.com','Bamgalore'),
(4,'Emily','Brown','emily.b@email.com','Chennai'),
(5,'David','Wilson','david.w@email.com','Pune');

select * from Customers;

create table Orders(
  order_id int primary key,
  customer_id int,
  order_date date,
  product_id int,
  quantity int,
  foreign key (customer_id) references Customers(customer_id)
);

insert into Orders(order_id,customer_id,order_date,product_id,quantity)
values
(101,1,'2025-10-15',1,2),
(102,1,'2025-10-18',3,1),
(103,2,'2025-10-19',2,3),
(104,3,'2025-10-20',1,1),
(105,6,'2025-10-21',4,2);

insert into Customers
values
(6,'Mike','Smith','mike.s@email.com','Hyderabad');

select * from orders;

create table Products(
  product_id int primary key,
  product_name varchar(25),
  price decimal(10,2),
  category varchar(25)
);

insert into Products
values
(1,'Laptop',45000.00,'Electronics'),
(2,'Mouse',500.00,'Electronics'),
(3,'Keyboard',1200.00,'Electronics'),
(4,'Moniter',12000.00,'Electronics'),
(5,'Headphones',1200.00,'Electronics');

select * from Products;

create table Payments(
   payment_id int primary key,
   order_id int,
   payment_date date,
   amount decimal(10,2),
   payment_method varchar(100),
   foreign key (order_id) references Orders(order_id)
);

insert into Payments
values
(1,101,'2025-10-15',90000.00,'Credit card'),
(2,102,'2025-10-18',1200.00,'UPI'),
(3,103,'2025-10-19',1500.00,'Debit card'),
(4,104,'2025-10-20',45000.00,'Net Banking');

select * from Payments;

--inner join
select O.customer_id,C.first_name,C.last_name,C.email,O.order_id,O.order_date
from
Customers as C
inner join
Orders as O
on
C.customer_id=O.customer_id;

--left join
select C.first_name,C.last_name,O.order_id,O.order_date
from
Customers as C
left join
Orders as O
on
C.customer_id=O.customer_id;

select O.order_id,O.order_date,C.first_name,C.last_name
from
Customers as C
right join
Orders as O
on
C.customer_id=O.customer_id;

-- full outer join
select C.first_name,C.last_name,C.customer_id,O.order_id,O.order_date
from
Customers as C
full outer join
Orders as O
on
C.customer_id=O.customer_id;

select C.first_name,C.last_name,O.order_id,O.order_date
from
Customers as C
full outer join
Orders as O
on
C.customer_id=O.customer_id;

select C.first_name,C.last_name,P.payment_id,P.payment_method
from
Customers as C
left join
Orders as O on C.Customer_id=O.customer_id
left join
Payments as P on O.order_id=P.order_id;

select PR.product_name,PR.price,O.order_id,O.order_date
from
Orders as O
inner join
Products as PR
on
O.product_id=PR.product_id;

select C.first_name,C.last_name,P.product_name,O.order_date
from
Customers as C
inner join
Orders as O on C.customer_id= O.customer_id
inner join
Products as P on O.product_id=P.product_id;

select C.first_name,C.last_name,O.order_date,P.payment_method
from
Customers as C
inner join Orders as O on C.customer_id=O.customer_id
inner join Payments as P on O.order_id=P.order_id;

select PR.product_name,O.order_date,PY.amount
from
Orders as O
inner join
Products as PR on O.product_id=PR.product_id
inner join Payments as PY on O.order_id=PY.order_id;

select C.customer_id,P.product_name,O.quantity,O.order_date
from
Customers as C
inner join Orders as O on C.customer_id=O.Customer_id
inner join Products as P on O.product_id=P.product_id;

select C.first_name,C.last_name,PR.product_name,PY.amount
from
Payments as PY
inner join Orders as O on PY.order_id=O.order_id
inner join Customers as C on O.customer_id=C.customer_id
inner join Products as PR on O.product_id=PR.product_id;

select C.email,PR.product_name,PY.payment_method
from
Customers as C
inner join Orders as O on C.customer_id=O.customer_id
inner join Products as PR on O.product_id=PR.product_id
inner join Payments as PY on O.order_id=PY.order_id;

select C.first_name,C.last_name,PR.product_name,PR.price,O.Quantity,PY.amount
from
Customers as C inner join Orders as O on C.customer_id=O.customer_id
inner join Products as PR on O.product_id=PR.product_id
inner join Payments as PY on O.order_id=PY.order_id;

select C.first_name,C.last_name,count(order_id) as total_orders
from
Customers as C
inner join Orders as O on C.customer_id=O.customer_id
group by C.first_name,C.last_name;

select PR.product_name,sum(quantity) as total_quantity
from
Products as PR inner join Orders as O on PR.product_id=O.product_id
group by PR.product_name;

select PY.payment_method,avg(amount)
from Payments as PY
group by payment_method;

select C.customer_id,C.first_name,C.last_name,max(quantity) as Max_quantity
from
Customers as C inner join Orders as O on C.customer_id=O.customer_id
group by C.customer_id,C.first_name,C.last_name;

select PR.product_id,PR.product_name,sum(amount) as Total_amount
from
Products as PR inner join Orders as O on PR.product_id=O.product_id
inner join Payments as PY on O.order_id=PY.order_id
group by PR.product_name,PR.product_id;

select C.customer_id,C.first_name,C.last_name,min(amount)
from
Customers as C inner join Orders as O on C.customer_id=O.customer_id
inner join Payments as PY on O.order_id=PY.order_id
group by C.customer_id,C.first_name,C.last_name;

select PR.product_id,PR.product_name,avg(quantity) as Avg_quantity
from
Orders as O inner join Products as PR on O.product_id=PR.product_id
group by PR.product_id,PR.product_name;

select PY.payment_method,max(amount) as Max_amount
from
Payments as Py group by PY.payment_method;

select C.customer_id,C.first_name,C.last_name,sum(quantity) as Total_quantity,sum(amount) as Total_amount
from
Customers as C inner join Orders as O on C.customer_id=O.customer_id
inner join Payments as PY on O.order_id=PY.order_id
group by C.customer_id,C.first_name,C.last_name;

select C.customer_id,count(distinct product_id) as Distinct_products
from
Customers as C inner join Orders as O on C.customer_id=O.customer_id
group by C.customer_id;

select PR.product_id,PR.product_name,min(order_date) as Earliest_order
from
Products as PR inner join Orders as O on PR.product_id=O.product_id
group by PR.product_id,PR.product_name;

select C.customer_id,C.first_name,C.last_name,max(payment_date)as last_order_date,sum(amount) as Total_amount
from
Customers as C inner join Orders as O on C.customer_id=O.customer_id
inner join Payments as PY on O.order_id=PY.order_id
group by C.customer_id,C.first_name,C.last_name;

select PR.product_id,PR.product_name,sum(quantity) as Total_quantity, avg(amount) as Avg_amount
from 
Customers as C inner join Orders as O on C.customer_id=O.customer_id
inner join Payments as PY on O.order_id=PY.order_id
inner join Products as PR on O.product_id=PR.product_id
group by PR.product_id,PR.product_name;

select PR.product_id,PR.product_name,count(O.order_id) as Order_count,max(amount)as Max_payment
from
Products as PR inner join Orders as O on PR.product_id=O.product_id
inner join Payments as PY on PY.order_id=O.order_id
group by PR.product_id,PR.product_name;

select C.customer_id,C.first_name,C.last_name,avg(amount),min(payment_date)
from
Customers as C inner join Orders as O on C.customer_id=O.customer_id
inner join Payments as PY on O.order_id=PY.order_id
group by C.customer_id,C.first_name,C.last_name;

select C.customer_id,C.first_name,C.last_name,O.order_id,O.order_date
from
Customers as C left join Orders as O on C.customer_id=O.customer_id;

select PR.product_id,PR.product_name,O.order_id,O.order_date
from Orders as O right join Products as PR on O.product_id=PR.product_id;

select C.customer_id,C.first_name,C.last_name,O.order_id,O.order_date
from Customers as C full outer join Orders as O
on
C.customer_id=O.customer_id;

select C.customer_id,C.first_name,C.last_name,PR.product_id,PR.product_name
from Customers as C full outer join Orders as O on C.customer_id=O.customer_id
full outer join Products as PR on O.product_id=O.product_id;

-- cross join
select C.customer_id,C.first_name,C.last_name,PR.product_id,PR.product_name
from Customers as C cross join Products as PR;

select C.customer_id,C.first_name,PR.product_id,PR.product_name,'YES' as can_order
from
Customers as C cross join Products as PR;

select C.first_name,C.last_name,O.order_id,O.order_date
from Customers as C
inner join
Orders as O
on C.customer_id=O.customer_id;

select PR.product_id,PR.product_name,O.order_id,O.order_date
from
Products as PR
left join
Orders as O
on PR.product_id=O.product_id;

select C.customer_id,C.first_name,C.last_name,O.order_id,O.order_date
from
Orders as O
right join
Customers as C
on
O.customer_id=C.customer_id;

select PR.product_id,PR.product_name,O.order_id,O.order_date
from
Orders as O
right join
Products as PR
on
O.product_id=PR.product_id;

select C.customer_id,C.first_name,C.last_name,O.order_id,O.order_date
from
Customers as C
full outer join
Orders as O
on
C.customer_id=O.customer_id;

select C.customer_id,C.first_name,C.last_name,PR.product_id,PR.product_name
from
Customers as C cross join Products as PR;

select C.first_name,O.order_id,O.order_date,PR.product_name
from
Customers as C inner join orders as O on C.customer_id=O.customer_id
inner join Products as PR on O.product_id=PR.product_id;

select C.customer_id,C.first_name,C.last_name,O.order_id,O.order_date
from
Customers as C left join Orders as O
on
C.customer_id=O.customer_id;

select C.first_name,C.last_name,O.order_id,O.order_date
from
Customers as C
right join
Orders as O
on C.customer_id=O.customer_id;

select PR.product_id,PR.product_name,O.order_id,O.order_date
from
Products as PR full outer join Orders as O
on
PR.product_id=O.product_id;

select C.first_name,C.last_name,count(O.order_id) as Orders_placed
from
Customers as C inner join Orders as O
on C.customer_id=O.customer_id
group by
C.first_name,C.last_name;

select PR.product_name,count(order_id) as frequency
from
Products as PR inner join Orders as O
on
PR.product_id=O.product_id
group by PR.product_name;

select C.first_name,C.last_name,max(order_date) as Recent_order_date
from
Customers as C inner join Orders as O
on C.customer_id=O.customer_id
group by C.first_name,C.last_name;

select PR.product_name,avg(quantity) as Avg_quantity
from
Products as PR inner join Orders as O
on PR.product_id=O.product_id
group by PR.product_name;

select C.first_name,C.last_name,max(order_date) as last_order_date,min(order_date) as first_order_date
from
Customers as C inner join Orders as O on C.customer_id=O.customer_id
group by C.first_name,C.last_name;

select C.first_name,C.last_name,sum(amount) as order_total
from
Customers as C inner join Orders as O on C.customer_id=O.customer_id
inner join Payments as PY on O.order_id=PY.order_id
group by C.first_name,C.last_name;

select C.first_name,C.last_name,count(order_id) as orders_placed
from
Customers as C inner join Orders as O on C.customer_id=O.customer_id
group by C.first_name,C.last_name having count(order_id)>1;

select C.first_name,C.last_name,count(O.order_id) as orders_placed,sum(amount) as amount_spent
from Customers as C inner join Orders as O on C.customer_id=O.customer_id
inner join Payments as PY on O.order_id=PY.order_id
group by C.first_name,C.last_name
having count(O.order_id)>1 and sum(amount)>500;

select PR.product_name,sum(quantity) as ordered_quantity,avg(amount) as avg_amount
from Orders as O inner join Products as PR on O.product_id=PR.product_id
inner join Payments as PY on O.order_id=PY.order_id
group by PR.product_name
having sum(quantity)>1 and avg(amount)>200;

select C.first_name,C.last_name,sum(amount) as amount_spent
from Customers as C inner join Orders as O on C.customer_id=O.customer_id
inner join Payments as PY on O.order_id=PY.order_id
where O.order_date>'2025-01-01' group by C.first_name,C.last_name;

select PR.product_name,sum(quantity) as orderded_quantity
from
Products as PR inner join Orders as O
on PR.product_id=O.product_id
where O.order_date>'2025-01-01'
group by PR.product_name
having sum(quantity)>2;

select C.first_name,C.last_name,sum(amount) as amount_spent
from
Customers as C inner join Orders as O on C.customer_id=O.customer_id
inner join Payments as PY on O.order_id=PY.order_id
where O.order_date>'2025-01-01'
group by C.first_name,C.last_name
having sum(amount)>1000 and count(O.order_id)>1;

select PR.product_name,sum(quantity) as ordered_quantity,avg(amount) as avg_amount
from Orders as O inner join Products as PR on O.product_id=PR.product_id
inner join Payments as PY on O.order_id=PY.order_id
where O.order_date>'2025-01-01'
group by PR.product_name
having sum(quantity)>20 and avg(amount)<150;

select PR.product_name,sum(quantity) as ordered_quantity,avg(amount) as avg_amount
from Orders as O inner join Products as PR on O.product_id=PR.product_id
inner join Payments as PY on O.order_id=PY.order_id
where order_date>'2025-01-01'
group by PR.product_name
having sum(quantity)>30 or avg(amount)<100;

select PR.product_name,sum(quantity) as total_quantity,avg(amount) as avg_amount
from Orders as O inner join Products as PR on O.product_id=PR.product_id
inner join Payments as PY on O.order_id=PY.order_id
where order_date>'2025-01-01'
group by PR.product_name
having not sum(quantity)<25 and not avg(amount)  <200;

select PR.product_name,sum(quantity) as ordered_quantity,avg(amount) as avg_amount
from Orders as O inner join Products as PR on O.product_id=PR.product_id
inner join Payments as PY on O.order_id=PY.order_id
where O.order_date>'2025-01-01'
group by PR.product_name
having sum(quantity)>=40 and (avg(amount)<120 or not avg(amount)> 250);

select avg(quantity) from Orders as O inner join Products as PR on O.product_id=PR.product_id where order_date>'2025-01-01' group by PR.product_id;

select * from Orders;

use PracticeDB;

select * from Customers;
select * from Products;
select * from Payments;

select C.first_name,C.last_name,O.order_date
from Customers as C inner join Orders as O
on C.customer_id=O.customer_id;

select O.order_id,PY.amount
from Orders as O inner join Payments as PY 
on O.order_id=PY.order_id;

select PR.product_name,PR.price
from Products as PR inner join Orders as O
on PR.product_id=O.product_id;

select PR.product_id,PR.price
from Products as PR
left join
Orders as O
on PR.product_id=O.product_id
where O.order_id is null;

select C.first_name,C.last_name
from Customers as C inner join Orders as O on C.customer_id=O.customer_id
inner join Payments as PY on O.order_id=PY.order_id
where payment_method='Credit card';

select C.first_name,C.last_name
from Customers as C inner join Orders as O
on C.customer_id=O.customer_id
inner join Products as PR on 
O.product_id=PR.product_id
inner join Payments as PY
on O.order_id=PY.order_id
where category='Electronics'
and amount>50;

insert into Products
values
(6,'SQL Cookbook',500.00,'Books'),
(7,'T-Shirt',800.00,'Apparel'),
(8,'Unordered Item',100.00,'Miscellaneous');

select O.order_id,O.quantity,PR.category
from Orders as O inner join Products as PR
on O.product_id=PR.product_id
where PR.category='Books';

select C.first_name,C.last_name,count(order_id) as Total_orders
from Customers as C inner join Orders as O
on C.customer_id=O.customer_id
group by C.first_name,C.last_name
having count(order_id)>=2;

select O.order_id,O.customer_id
from Orders as O left join Payments as PY on O.order_id=PY.order_id
where PY.payment_date is null;

select C.first_name,C.last_name,sum(amount) as amount_spent
from Customers as C inner join Orders as O on C.customer_id=O.customer_id
inner join Products as PR on O.product_id=PR.product_id
inner join Payments as PY on O.order_id=PY.order_id
where category='Electronics'
group by C.first_name,C.last_name;

insert into Orders
values
(106,6,'2025-10-22',6,2),
(107,4,'2025-10-23',7,1),
(108,5,'2025-10-24',1,1);

insert into Payments
values
(5,106,'2025-10-22',1000.00,'Cash'),
(6,107,'2025-10-23',800.00,'Debit card'),
(7,108,'2025-10-24',45000.00,'Credit card');

select C.first_name,C.last_name
from Customers as C inner join Orders as O on C.customer_id=O.customer_id
inner join Products as PR on O.product_id=PR.product_id
inner join Payments as PY on O.order_id=PY.order_id
where price=500 and payment_method='Cash';

select PR.product_name from 
Products as PR left join Orders as O on PR.product_id=O.product_id
left join Customers as C on O.customer_id=C.customer_id
where category='Electronics' and not city='Mumbai';
